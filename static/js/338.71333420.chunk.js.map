{"version":3,"file":"static/js/338.71333420.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactsForm/ContactsForm.module.css?d5f2","components/ContactsForm/ContactsForm.jsx","webpack://react-homework-template/./src/components/ContactsList/ContactsList.module.css?d8e9","components/ContactsList/ContactsList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://react-homework-template/./src/components/ContactsApp/ContactsApp.module.css?24d4","page/Contacts.jsx"],"sourcesContent":["export const getContacts = state => state.contacts.items;\n\nexport const getIsLoading = state => state.contacts.IsLoading;\n\nexport const getError = state => state.contacts.error;\n\nexport const getFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactsForm_form__1Y65-\",\"formLable\":\"ContactsForm_formLable__UMzjS\",\"formInput\":\"ContactsForm_formInput__xAv31\",\"formButton\":\"ContactsForm_formButton__sosH8\"};","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addContact } from 'redux/contacts/operations';\nimport { getContacts } from 'redux/contacts/selectors';\nimport css from './ContactsForm.module.css';\n\nexport default function ContactsForm() {\n  const dispatch = useDispatch();\n  const savedContacts = useSelector(getContacts);\n\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const handleNameChange = event => {\n    const { value } = event.target;\n    setName(value);\n  };\n\n  const handlePhoneChange = event => {\n    const { value } = event.target;\n    setPhone(value);\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const contactExists = savedContacts.some(\n      contact => contact.name === name || contact.phone === phone\n    );\n\n    if (!contactExists) {\n      dispatch(addContact({ name, phone }));\n    } else {\n      alert('Such a contact already exists in the phonebook!');\n    }\n\n    resetForm();\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.formLable}>\n        Name:\n        <input\n          className={css.formInput}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleNameChange}\n          value={name}\n        />\n      </label>\n      <label className={css.formLable}>\n        Phone:\n        <input\n          className={css.formInput}\n          type=\"tel\"\n          name=\"phone\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handlePhoneChange}\n          value={phone}\n        />\n      </label>\n      <button className={css.formButton} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"contactsList\":\"ContactsList_contactsList__ZQI1L\",\"contactsItem\":\"ContactsList_contactsItem__b2nHv\",\"contactsName\":\"ContactsList_contactsName__aMNYv\",\"contactsNumber\":\"ContactsList_contactsNumber__s8H2p\",\"contactsButton\":\"ContactsList_contactsButton__VdMSp\"};","import React from 'react';\nimport css from './ContactsList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { removeContact } from 'redux/contacts/operations';\nimport { getFilter } from 'redux/contacts/selectors';\n\nexport default function ContactsList() {\n  const dispatch = useDispatch();\n\n  const filterValue = useSelector(getFilter);\n\n  const filteredContacts = useSelector(state => {\n    if (filterValue) {\n      return state.contacts.items.filter(contact =>\n        contact.name.toLowerCase().includes(filterValue.toLowerCase().trim())\n      );\n    } else {\n      return state.contacts.items;\n    }\n  });\n\n  const handleSubmit = event => {\n    dispatch(removeContact(event));\n  };\n\n  return (\n    <ul className={css.contactsList}>\n      {filteredContacts.map(contact => (\n        <li className={css.contactsItem} key={contact.id}>\n          <div className={css.contactsName}>\n            <span>{contact.name}</span>\n          </div>\n          <div className={css.contactsNumber}>\n            <span>{contact.phone}</span>\n          </div>\n          <div>\n            <button\n              className={css.contactsButton}\n              type=\"button\"\n              onClick={() => handleSubmit(contact.id)}\n            >\n              Delete\n            </button>\n          </div>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"filter\":\"Filter_filter__vxThR\",\"filterLable\":\"Filter_filterLable__GyV6u\",\"filterInput\":\"Filter_filterInput__1Cysk\"};","import React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { getFilter } from 'redux/contacts/selectors';\nimport css from './Filter.module.css';\n\nconst Filter = () => {\n  const filter = useSelector(getFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    dispatch(filterContact(event.target.value));\n  };\n\n  return (\n    <div className={css.filter}>\n      <label className={css.fiterLabel}>Find contacts by name</label>\n      <input\n        className={css.fiterInput}\n        type=\"text\"\n        value={filter}\n        name=\"filter\"\n        id=\"\"\n        onChange={handleChange}\n      />\n    </div>\n  );\n};\nexport default Filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"section\":\"ContactsApp_section__qy-Rr\",\"sectionTitel\":\"ContactsApp_sectionTitel__QGCTu\"};","import React, { useEffect } from 'react';\nimport ContactsForm from '../components/ContactsForm/ContactsForm';\nimport ContactsList from '../components/ContactsList/ContactsList';\nimport Filter from '../components/Filter/Filter';\nimport css from '../components/ContactsApp/ContactsApp.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { getError, getIsLoading } from 'redux/contacts/selectors';\nimport { Helmet } from 'react-helmet';\n\nexport const ContactsApp = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(getIsLoading);\n  const error = useSelector(getError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div className={css.section}>\n      <Helmet>\n        <title>Your contacts</title>\n      </Helmet>\n      <h1 className={css.sectionTitel}>Phonebook</h1>\n      <ContactsForm />\n      {isLoading && !error && <b>Request in progress...</b>}\n      <h2 className={css.sectionTitel}>Contacts</h2>\n      <Filter />\n      <ContactsList />\n    </div>\n  );\n};\n"],"names":["getContacts","state","contacts","items","getIsLoading","IsLoading","getError","error","getFilter","filter","ContactsForm","dispatch","useDispatch","savedContacts","useSelector","useState","name","setName","phone","setPhone","className","css","onSubmit","event","preventDefault","some","contact","alert","addContact","type","pattern","title","required","onChange","value","target","ContactsList","filterValue","filteredContacts","toLowerCase","includes","trim","map","onClick","id","removeContact","filterContact","ContactsApp","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}